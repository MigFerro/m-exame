package homeview

import (
    "strconv"

    "github.com/MigFerro/exame/templates/layouts"
    "github.com/MigFerro/exame/data"

)


templ Show() {
    @layouts.Base(layouts.BaseOptions{ WithLatex: true, WithHTMX:true }) {
        <h2 class="w-full text-center text-5xl font-bold text-gray-900 my-10">Mais exercícios, mais prática</h2>

        @exameContainer() {
            <div hx-get="/exam-list?show=show" hx-target="#exame_container" hx-swap="outerHTML" class="w-1/3 p-6 bg-white border border-gray-200 rounded-3xl shadow hover:cursor-pointer hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
                <h5 class="w-full text-center mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">Resolve um desafio</h5>
            </div>
        }

        <div class="w-full bg-slate-100 py-10 mt-[3.5rem] mb-[8rem] text-xl text-center rounded-lg">
            <ul class="text-xl text-center">
                <li>
                   Ganha pontos a resolver desafios com exercícios baseados nos Exames Nacionais.
                </li>
                <li class="mt-5">
                    Usa os pontos para guiar o progresso do teu estudo e ganhar confiança na tua preparação.
                </li>
                <li class="mt-5">
                    Atinge os 
                    <span class="text-green-700 font-bold">
                       500 
                    </span>
                    pontos para te sentires preparado/a!
                </li>
            </ul>
        </div>

        <h3 class="mb-20 w-full text-center text-4xl font-bold">Desafios de matérias específicas</h3>

        @yearContainer() {
            <ul class="flex -mx-2.5">
                for _, year := range []string{"10", "11", "12"} {
                    @yearButton(year, false, []data.ExerciseCategory{})
                }
            </ul>
            
        }
    }
}

templ exameContainer() {
    <div class="py-10 flex flex-col justify-center items-center" id="exame_container">
        { children... }
    </div>
}

templ exameButton(clicked bool) {
    if clicked {
        <div hx-get="/exam-list?show=hide" hx-target="#exame_container" hx-swap="outerHTML" class="w-1/3 p-6 bg-gray-100 border border-gray-200 rounded-3xl shadow hover:cursor-pointer hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
            <h5 class="w-full text-center mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">Resolve um desafio</h5>
        </div>
    } else {
        <div hx-get="/exam-list?show=show" hx-target="#exame_container" hx-swap="outerHTML" class="w-1/3 p-6 bg-white border border-gray-200 rounded-3xl shadow hover:cursor-pointer hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
            <h5 class="w-full text-center mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">Resolve um desafio</h5>
        </div>
    }

}

templ exameContentsList(show bool) {
    @exameButton(show)
    if show {
        <ul class="w-1/4 pt-5">
            <li class="block w-full border-y border-gray-200 bg-white text-xl text-center font-medium hover:bg-gray-100">
                <a class="block w-full py-4" href="/test?type=random">
                    Aleatório
                </a>
            </li>
            <li class="block w-full border-y border-gray-200 bg-white text-xl text-center font-medium hover:bg-gray-100">
                <a class="block w-full py-4" href="/test?type=new">
                    Novos
                </a>
            </li>
            <li class="block w-full border-y border-gray-200 bg-white text-xl text-center font-medium hover:bg-gray-100">
                <a class="block w-full py-4" href="/test?type=wrong">
                    Errados
                </a>
            </li>
        </ul>
    }
}

templ ExameExerciseChoiceList(showList bool) {
    @exameContainer() {
        @exameContentsList(showList)
    }
}

templ yearContainer() {
    <div class="flex flex-col justify-center items-center" id="year_container">
        { children... }
    </div>

}

templ yearButton(year string, clicked bool, categoryList []data.ExerciseCategory) {
    if clicked {
        <li class="block w-1/3 mx-2.5">
            <div hx-get={ "/year-category-list?show=hide&showYear=" + year } hx-target="#year_container" hx-swap="outerHTML" class="block p-6 border border-gray-200 rounded-lg bg-gray-100 hover:cursor-pointer">
                <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">Matérias de {year}º ano</h5>
            </div>
        </li>
    } else {
        <li class="block w-1/3 mx-2.5">
            <div hx-get={ "/year-category-list?show=show&showYear=" + year } hx-target="#year_container" hx-swap="outerHTML" class="block p-6 bg-white border border-gray-200 rounded-lg shadow hover:cursor-pointer hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
                <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">Matérias de {year}º ano</h5>
            </div>
        </li>
    }
}

templ YearExerciseCategoryList(showList bool, showListYear string, categoryList []data.ExerciseCategory) {
    @yearContainer() {
        <ul class="flex -mx-2.5">
            for _, year := range []string{"10", "11", "12"} {
                @yearButton(year, year == showListYear && showList, categoryList)
            }
        </ul>
        if showList {
            <ul class="w-4/5 pt-5">
                for _, category := range categoryList {
                    <li class="block w-full border-y border-gray-200 bg-white text-xl text-center font-medium hover:bg-gray-100">
                        <a class="block w-full py-4" href={ templ.URL("/test?cat=" + strconv.Itoa(category.Iid)) }>
                            { category.Category }
                        </a>
                    </li>
                }
            </ul>
        }
    }
}
